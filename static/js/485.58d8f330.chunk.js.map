{"version":3,"file":"static/js/485.58d8f330.chunk.js","mappings":"wKAsBA,IAnBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,OAAS,GACjBH,EAAOI,KAAI,SAAAC,GACT,OACE,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACDI,EAAMK,SAFAL,EAAME,GAMlB,KAGN,C,6HChBYI,EAAUC,EAAAA,EAAAA,IAAH,wCAIPC,EAAYD,EAAAA,EAAAA,GAAH,oC,mBCetB,EAlBa,WACb,OAA4BE,EAAAA,EAAAA,UAAU,IAAtC,eAAOd,EAAP,KAAee,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACCC,MAAK,SAAAC,GAAWJ,EAAUI,EAC1B,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAME,QAAxB,GACb,GAAE,KAGD,UAACZ,EAAD,YACE,SAACE,EAAD,UAAW,sBACRb,EAAOG,SAAU,SAACqB,EAAA,EAAD,CAAYxB,OAAQA,MAG3C,C,kMCnBDyB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGHT,EAAa,mCAAG,+FACrBU,EAAS,CACbC,QAASF,EACTG,KAAM,GAHmB,SAKJJ,EAAAA,EAAAA,IAAU,sBAAuB,CAAEE,OAAAA,IAL/B,uBAKnBG,EALmB,EAKnBA,KALmB,kBAMpBA,EAAKC,SANe,2CAAH,qDAUbC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBN,EAAS,CACbC,QAASF,EACTG,KAAM,EACNI,MAAAA,GAJ6B,SAMRR,EAAAA,EAAAA,IAAU,gBAAiB,CAAEE,OAAAA,IANrB,uBAMvBG,EANuB,EAMvBA,KANuB,kBAOxBA,EAAKC,QAAQG,QAAO,SAAA7B,GAAK,OAC9BA,EAAMK,MAAMyB,cAAcC,SAASH,EAAME,cADX,KAPD,2CAAH,sDAajBE,EAAa,mCAAG,WAAMC,GAAN,kFACrBX,EAAS,CACbC,QAASF,EACTG,KAAM,GAHmB,SAKJJ,EAAAA,EAAAA,IAAA,iBAAoBa,GAAW,CAAEX,OAAAA,IAL7B,uBAKnBG,EALmB,EAKnBA,KACRR,QAAQiB,IAAIT,GANe,kBAOpBA,GAPoB,2CAAH,sDAWbU,EAAS,mCAAG,WAAMF,GAAN,kFACjBX,EAAS,CACbC,QAASF,EACTG,KAAM,EACNY,SAAU,SAJW,SAMAhB,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,YAAuC,CAAEX,OAAAA,IANzC,uBAMfG,EANe,EAMfA,KANe,kBAOhBA,GAPgB,2CAAH,sDAWTY,EAAY,mCAAG,WAAMJ,GAAN,kFACpBX,EAAS,CACbC,QAASF,EACTG,KAAM,EACNY,SAAU,SAJc,SAMHhB,EAAAA,EAAAA,IAAA,iBAAoBa,EAApB,YAAuC,CAAEX,OAAAA,IANtC,uBAMlBG,EANkB,EAMlBA,KANkB,kBAOnBA,EAAKC,SAPc,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/services.jsx"],"sourcesContent":["import { Link } from 'react-router-dom' // створення навігаційних посилань усередині програми без перезавантаження сторінки\nimport { useLocation } from 'react-router-dom' // хук - інформація про поточну URL-адресу.\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation(); // використовуємо хук для для отримання інформації про поточний URL\n\n  return (\n    <ul> \n      {movies.length > 0 && \n      movies.map(movie => {\n        return (\n          <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\n//*#info - відображення списку фільмів у вигляді посилань для отримання дод. інформації\n/*\n<ul>  - список для відображення фільмів\n{movies.length > 0 && ...} - чи є фільми у списку. Якщо так, через 'map' відображаємо список.\nmovies.map(movie => { ... }) - Ітерація за списком фільмів і створення списку для кожного фільму.\n  \nreturn (\n<li key={movie.id}> - Створення списку з ключем, з унікальною ідентифікацією кожного фільма.\n\n<Link to={/movies/${movie.id}} state={{ from: location }}> Створюємо посилання за допомогою компонента Link. \n'to' вказує на URL-адресу фільму з його ідентифікатором {movie.id}. \nУ параметр state передаємо об'єкт з інформацією звідки було виконано перехід на цей фільм.\n\n{movie.title} -  Відображаємо назву фільму як гіперпосилання.\n)\n</ul>\n\n*/","import styled from \"@emotion/styled\";\n\n\n\nexport const HomeBox = styled.div`\npadding: 24px;\n`;\n\nexport const HomeTitle = styled.h1`\nmargin: 0;\n`;","import { useEffect, useState } from 'react' // імпорт хуків \nimport { fetchTrending } from 'services/services'; // ф-я запиту про популярні фільми на поточний день\nimport { HomeBox, HomeTitle } from './Home.styled'; // стилізовані компоненти\nimport MoviesList from 'components/MoviesList/MoviesList'; //список фільмів\n\nconst Home = () => {\nconst [movies, setMovies] = useState ([]);\n\nuseEffect(() => {\n  fetchTrending ()\n  .then(answer => {setMovies(answer)\n  })\n  .catch(error => console.error(error.message));\n}, []);\n\nreturn (\n  <HomeBox>\n    <HomeTitle>Trending movies</HomeTitle>\n    {!!movies.length && <MoviesList movies={movies}/>}\n  </HomeBox>\n);\n};\n\nexport default Home;\n\n//*#info - відображення списку популярних фільмів (хук useEffect)\n/*\nconst [movies, setMovies] = useState([]); - хук стану useState, змінна стану movies - зберігає [список] фільмів, функція setMovies - оновлення списку\n\nuseEffect(() => { ... }, []) - хук для запиту до API - \"популярні фільми\", [] - запит один раз, бо пустий масив\nfetchTrending().then(...) - ф-я отримання популярних фільмів\n{setMovies(answer)} - функція оновлення списку\n{!!movies.length && <MoviesList movies={movies}/>} } - виводимо список фільмів якщо його довжина > 0, (передаються як властивість до компонента MoviesList) \n\n*/","import axios from 'axios'; //бібліотека відправки асинхронних HTTP-запитів до API\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6cbea8cece37cf85eba0b83585dd8520';\n\n// Список популярних фільмів на поточний день\nexport const fetchTrending = async () => {\n  const params = {\n    api_key: API_KEY,\n    page: 1, // пагінація результатів\n  };\n  const { data } = await axios.get('/trending/movie/day', { params });\n  return data.results;\n};\n\n//Пошук фільмім по запиту (query)\nexport const fetchSearchResult = async query => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    query,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data.results.filter(movie =>\n    movie.title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\n//Інформація про обраний фільм (movieId)\nexport const fetchOneMovie = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n  };\n  const { data } = await axios.get(`/movie/${movieId}`, { params });\n  console.log(data);\n  return data;\n};\n\n//Результат про акторський склад, ролі (moviedId)\nexport const fetchCast = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/credits`, { params });\n  return data;\n};\n\n//Результат огляду фільму (moviedId)\nexport const fetchReviews = async movieId => {\n  const params = {\n    api_key: API_KEY,\n    page: 1,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, { params });\n  return data.results;\n};\n\n//*#info - функції пошуку (асинхронні запити до API)"],"names":["movies","location","useLocation","length","map","movie","to","id","state","from","title","HomeBox","styled","HomeTitle","useState","setMovies","useEffect","fetchTrending","then","answer","catch","error","console","message","MoviesList","axios","API_KEY","params","api_key","page","data","results","fetchSearchResult","query","filter","toLowerCase","includes","fetchOneMovie","movieId","log","fetchCast","language","fetchReviews"],"sourceRoot":""}